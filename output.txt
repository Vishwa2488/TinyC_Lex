< multiline comment, /*
    Compilers Lab Assignment 3 Group Project
    Test File
    22CS10061: Vishwa Gangadhar   
    22CS10074: Siddharth Ambedkar
*/ >
< multiline comment, /* Keywords and Identifiers */ >
< KEYWORD, short >
< IDENTIFIER, a >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 1 >
< END OF LINE CHARACTER, ; >
< KEYWORD, int >
< IDENTIFIER, b >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 2 >
< END OF LINE CHARACTER, ; >
< KEYWORD, long >
< IDENTIFIER, c >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 3 >
< END OF LINE CHARACTER, ; >
< KEYWORD, float >
< IDENTIFIER, d >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 4.0 >
< END OF LINE CHARACTER, ; >
< KEYWORD, char >
< IDENTIFIER, e >
< SPECIAL CHARACTER, = >
< CHARACTER CONSTANT, 'c' >
< END OF LINE CHARACTER, ; >
< KEYWORD, const >
< KEYWORD, char >
< IDENTIFIER, f >
< SPECIAL CHARACTER, = >
< CHARACTER CONSTANT, 'u' >
< END OF LINE CHARACTER, ; >
< KEYWORD, unsigned >
< KEYWORD, int >
< IDENTIFIER, g >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 5 >
< END OF LINE CHARACTER, ; >
< KEYWORD, signed >
< KEYWORD, int >
< IDENTIFIER, h >
< SPECIAL CHARACTER, = >
< ARITHMETIC OPERATOR, - >
< INTEGER CONSTANT, 6 >
< END OF LINE CHARACTER, ; >
< KEYWORD, double >
< IDENTIFIER, i >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 7.89 >
< END OF LINE CHARACTER, ; >
< KEYWORD, Bool >
< IDENTIFIER, j >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 1 >
< END OF LINE CHARACTER, ; >
< KEYWORD, auto >
< IDENTIFIER, k >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 10 >
< END OF LINE CHARACTER, ; >
< KEYWORD, Complex >
< IDENTIFIER, l >
< END OF LINE CHARACTER, ; >
< KEYWORD, Imaginary >
< IDENTIFIER, m >
< END OF LINE CHARACTER, ; >
< KEYWORD, typedef >
< KEYWORD, struct >
< SPECIAL CHARACTER, { >
< KEYWORD, int >
< IDENTIFIER, x >
< END OF LINE CHARACTER, ; >
< KEYWORD, int >
< IDENTIFIER, y >
< END OF LINE CHARACTER, ; >
< SPECIAL CHARACTER, } >
< IDENTIFIER, Point >
< END OF LINE CHARACTER, ; >
< IDENTIFIER, Point >
< IDENTIFIER, p1 >
< END OF LINE CHARACTER, ; >
< KEYWORD, union >
< SPECIAL CHARACTER, { >
< KEYWORD, int >
< IDENTIFIER, n >
< END OF LINE CHARACTER, ; >
< KEYWORD, float >
< IDENTIFIER, o >
< END OF LINE CHARACTER, ; >
< SPECIAL CHARACTER, } >
< IDENTIFIER, u >
< END OF LINE CHARACTER, ; >
< KEYWORD, enum >
< SPECIAL CHARACTER, { >
< IDENTIFIER, RED >
< SPECIAL CHARACTER, , >
< IDENTIFIER, GREEN >
< SPECIAL CHARACTER, , >
< IDENTIFIER, BLUE >
< SPECIAL CHARACTER, } >
< IDENTIFIER, color >
< END OF LINE CHARACTER, ; >
< multiline comment, /* Valid Identifiers */ >
< KEYWORD, int >
< IDENTIFIER, _123129aaas92 >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 10 >
< END OF LINE CHARACTER, ; >
< KEYWORD, float >
< IDENTIFIER, validIdentifier1 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 3.14 >
< END OF LINE CHARACTER, ; >
< KEYWORD, char >
< IDENTIFIER, anotherVarName >
< SPECIAL CHARACTER, = >
< CHARACTER CONSTANT, 'a' >
< END OF LINE CHARACTER, ; >
< IDENTIFIER, character_sequence >
< IDENTIFIER, s >
< SPECIAL CHARACTER, = >
< CHARACTER SEQUENCE, 'abcdefghihgfedcba' >
< END OF LINE CHARACTER, ; >
< KEYWORD, double >
< IDENTIFIER, _underscore_test >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 1.23 >
< END OF LINE CHARACTER, ; >
< KEYWORD, int >
< IDENTIFIER, identifier123 >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 456 >
< END OF LINE CHARACTER, ; >
< KEYWORD, unsigned >
< KEYWORD, long >
< IDENTIFIER, anotherExample >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 7890 >
< END OF LINE CHARACTER, ; >
< KEYWORD, const >
< KEYWORD, int >
< IDENTIFIER, example_const >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 42 >
< END OF LINE CHARACTER, ; >
< KEYWORD, long >
< IDENTIFIER, var_name_with_underscore >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 1000 >
< END OF LINE CHARACTER, ; >
< multiline comment, /* Fractional Float Constants */ >
< KEYWORD, float >
< IDENTIFIER, frac1 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 123127e1231 >
< END OF LINE CHARACTER, ; >
< KEYWORD, double >
< IDENTIFIER, frac2 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 123127e-1231 >
< END OF LINE CHARACTER, ; >
< KEYWORD, float >
< IDENTIFIER, frac3 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 123.456 >
< END OF LINE CHARACTER, ; >
< KEYWORD, double >
< IDENTIFIER, frac4 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 123.456e10 >
< END OF LINE CHARACTER, ; >
< KEYWORD, float >
< IDENTIFIER, frac5 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 0000.123456 >
< END OF LINE CHARACTER, ; >
< KEYWORD, double >
< IDENTIFIER, frac6 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 1.234567e-5 >
< END OF LINE CHARACTER, ; >
< KEYWORD, float >
< IDENTIFIER, frac7 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 123127e1231 >
< END OF LINE CHARACTER, ; >
< KEYWORD, double >
< IDENTIFIER, frac8 >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 123127.12310e12 >
< END OF LINE CHARACTER, ; >
< multiline comment, /* Control structures */ >
< KEYWORD, if >
< SPECIAL CHARACTER, ( >
< IDENTIFIER, a >
< COMPARISON OPERATOR, < >
< IDENTIFIER, b >
< SPECIAL CHARACTER, ) >
< SPECIAL CHARACTER, { >
< KEYWORD, while >
< SPECIAL CHARACTER, ( >
< IDENTIFIER, c >
< COMPARISON OPERATOR, > >
< IDENTIFIER, d >
< SPECIAL CHARACTER, ) >
< SPECIAL CHARACTER, { >
< KEYWORD, for >
< SPECIAL CHARACTER, ( >
< KEYWORD, int >
< IDENTIFIER, x >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 0 >
< END OF LINE CHARACTER, ; >
< IDENTIFIER, x >
< COMPARISON OPERATOR, < >
< INTEGER CONSTANT, 10 >
< END OF LINE CHARACTER, ; >
< IDENTIFIER, x >
< ARITHMETIC OPERATOR, ++ >
< SPECIAL CHARACTER, ) >
< SPECIAL CHARACTER, { >
< IDENTIFIER, c >
< ARITHMETIC OPERATOR, -- >
< END OF LINE CHARACTER, ; >
< SPECIAL CHARACTER, } >
< SPECIAL CHARACTER, } >
< SPECIAL CHARACTER, } >
< KEYWORD, else >
< KEYWORD, if >
< SPECIAL CHARACTER, ( >
< IDENTIFIER, b >
< COMPARISON OPERATOR, == >
< IDENTIFIER, a >
< SPECIAL CHARACTER, ) >
< SPECIAL CHARACTER, { >
< KEYWORD, switch >
< SPECIAL CHARACTER, ( >
< IDENTIFIER, color >
< SPECIAL CHARACTER, ) >
< SPECIAL CHARACTER, { >
< KEYWORD, case >
< IDENTIFIER, RED >
< SPECIAL CHARACTER, : >
< IDENTIFIER, p1 >
< SPECIAL CHARACTER, . >
< IDENTIFIER, x >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 1 >
< END OF LINE CHARACTER, ; >
< KEYWORD, break >
< END OF LINE CHARACTER, ; >
< KEYWORD, case >
< IDENTIFIER, GREEN >
< SPECIAL CHARACTER, : >
< IDENTIFIER, p1 >
< SPECIAL CHARACTER, . >
< IDENTIFIER, y >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 2 >
< END OF LINE CHARACTER, ; >
< KEYWORD, break >
< END OF LINE CHARACTER, ; >
< KEYWORD, default >
< SPECIAL CHARACTER, : >
< KEYWORD, break >
< END OF LINE CHARACTER, ; >
< SPECIAL CHARACTER, } >
< SPECIAL CHARACTER, } >
< KEYWORD, else >
< SPECIAL CHARACTER, { >
< KEYWORD, return >
< END OF LINE CHARACTER, ; >
< SPECIAL CHARACTER, } >
< multiline comment, /* Constants */ >
< KEYWORD, int >
< IDENTIFIER, p >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 123 >
< END OF LINE CHARACTER, ; >
< KEYWORD, float >
< IDENTIFIER, q >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 456.789 >
< END OF LINE CHARACTER, ; >
< KEYWORD, char >
< IDENTIFIER, r >
< SPECIAL CHARACTER, = >
< CHARACTER CONSTANT, 'r' >
< END OF LINE CHARACTER, ; >
< KEYWORD, const >
< KEYWORD, float >
< IDENTIFIER, pi >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 3.14159 >
< END OF LINE CHARACTER, ; >
< KEYWORD, const >
< KEYWORD, double >
< IDENTIFIER, euler >
< SPECIAL CHARACTER, = >
< FLOATING POINT CONSTANT, 2.71828 >
< END OF LINE CHARACTER, ; >
< KEYWORD, const >
< KEYWORD, int >
< IDENTIFIER, max_value >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 1000 >
< END OF LINE CHARACTER, ; >
< multiline comment, /* String literals */ >
< KEYWORD, char >
< ARITHMETIC OPERATOR, * >
< IDENTIFIER, str >
< SPECIAL CHARACTER, = >
< STRING LITERAL, "Hello, World!" >
< END OF LINE CHARACTER, ; >
< KEYWORD, char >
< ARITHMETIC OPERATOR, * >
< IDENTIFIER, path >
< SPECIAL CHARACTER, = >
< STRING LITERAL, "C:\\Users\\Name" >
< END OF LINE CHARACTER, ; >
< multiline comment, /* Punctuations */ >
< KEYWORD, int >
< IDENTIFIER, result >
< SPECIAL CHARACTER, = >
< IDENTIFIER, a >
< ARITHMETIC OPERATOR, + >
< IDENTIFIER, b >
< ARITHMETIC OPERATOR, * >
< SPECIAL CHARACTER, ( >
< IDENTIFIER, c >
< ARITHMETIC OPERATOR, - >
< IDENTIFIER, d >
< SPECIAL CHARACTER, ) >
< END OF LINE CHARACTER, ; >
< IDENTIFIER, result >
< ARITHMETIC OPERATOR, <<= >
< INTEGER CONSTANT, 2 >
< END OF LINE CHARACTER, ; >
< IDENTIFIER, result >
< ARITHMETIC OPERATOR, &= >
< SPECIAL CHARACTER, ~ >
< INTEGER CONSTANT, 1 >
< END OF LINE CHARACTER, ; >
< KEYWORD, char >
< IDENTIFIER, punct >
< SPECIAL CHARACTER, = >
< CHARACTER CONSTANT, ';' >
< END OF LINE CHARACTER, ; >
< multiline comment, /* Comments */ >
< KEYWORD, int >
< IDENTIFIER, s >
< SPECIAL CHARACTER, = >
< INTEGER CONSTANT, 42 >
< END OF LINE CHARACTER, ; >
< singleline comment, // This is a single-line comment
 >
< multiline comment, /*
This is a 
multi-line comment
*/ >
< multiline comment, /* Delimiters */ >
< KEYWORD, int >
< IDENTIFIER, array >
< SPECIAL CHARACTER, [ >
< INTEGER CONSTANT, 5 >
< SPECIAL CHARACTER, ] >
< SPECIAL CHARACTER, = >
< SPECIAL CHARACTER, { >
< INTEGER CONSTANT, 1 >
< SPECIAL CHARACTER, , >
< INTEGER CONSTANT, 2 >
< SPECIAL CHARACTER, , >
< INTEGER CONSTANT, 3 >
< SPECIAL CHARACTER, , >
< INTEGER CONSTANT, 4 >
< SPECIAL CHARACTER, , >
< INTEGER CONSTANT, 5 >
< SPECIAL CHARACTER, } >
< END OF LINE CHARACTER, ; >
< KEYWORD, int >
< ARITHMETIC OPERATOR, * >
< IDENTIFIER, ptr >
< SPECIAL CHARACTER, = >
< BITWISE OPERATOR, & >
< IDENTIFIER, a >
< END OF LINE CHARACTER, ; >


The identifiers in the file are
a
b
c
d
e
f
g
h
i
j
k
l
m
x
y
Point
p1
n
o
u
RED
GREEN
BLUE
color
_123129aaas92
validIdentifier1
anotherVarName
character_sequence
s
_underscore_test
identifier123
anotherExample
example_const
var_name_with_underscore
frac1
frac2
frac3
frac4
frac5
frac6
frac7
frac8
p
q
r
pi
euler
max_value
str
path
result
punct
array
ptr


